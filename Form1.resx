<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="textBox1.Text" xml:space="preserve">
    <value>Слово логика означает совокупность правил, которым подчиняется процесс мышления. Сам термин "логика" происходит от древнегреческого logos, означающего "слово, мысль, понятие, рассуждение, закон". Формальная логика - наука о формах и законах мышления. Законы логики отражают в сознании человека свойства, связи и отношения объектов окружающего мира. Логика как наука позволяет строить формальные модели окружающего мира, отвлекаясь от содержательной стороны. Основными формами мышления являются понятия, суждения и умозаключения.

Понятие - это форма мышления, которая выделяет существенные признаки предмета или класса предметов, отличающие его от других. Например, компьютер, человек, ученики.

Суждения - это форма мышления, в которой утверждается или отрицается связь между предметом и его признаком, отношения между предметами или факт существования предмета и которая может быть либо истинной, либо ложной. Языковой формой выражения суждения является повествовательное предложение. Вопросительные и побудительные предложения суждениями не являются.

Суждения рассматриваются не с точки зрения их смысла и содержания, а только с точки зрения их истинности или ложности. Истинным будет суждение, в котором связь понятий правильно отражает свойства и отношения реальных объектов. "Дважды два равно четырем" - истинное суждение, а вот "Процессор предназначен для печати" - ложное. Суждения могут быть простыми и сложными. "Весна наступила, и грачи прилетели" - сложное суждение, состоящее из двух простых. Простые суждения (высказывания) выражают связь двух понятий. Сложные - состоят из нескольких простых суждений.

Умозаключение - прием мышления, позволяющий на основе одного или нескольких суждений-посылок получить новое суждение (знание или вывод).

Примерами умозаключений являются доказательства теорем в геометрии. Посылками умозаключения по правилам формальной логики могут быть только истинные суждения. Тогда и умозаключение будет истинным. Иначе можно прийти к ложному умозаключению.

Математическая логика изучает вопросы применения математических методов для решения логических задач и построения логических схем, которые лежат в основе работы любого компьютера. Суждения в математической логике называют высказываниями или логическими выражениями. Подобно тому, как для описания действий над переменными был разработан раздел математики алгебра, так и для обработки логических выражений в математической логике была создана алгебра высказываний, или алгебра логики.</value>
  </data>
  <data name="textBox2.Text" xml:space="preserve">
    <value>Логическое выражение - это символическая запись, состоящая из логических величин (констант или переменных), объединенных логическими операциями (связками).

В булевой алгебре простым высказываниям ставятся в соответствие логические переменные, значение которых равно 1, если высказывание истинно, и 0, если высказывание ложно. Обозначаются логические переменные буквами латинского алфавита.

Существуют разные варианты обозначения истинности и ложности переменных:

Истина И True T 1

Ложь Л False F 0

Связки "НЕ", "И", "ИЛИ" заменяются логическими операциями инверсия, конъюнкция, дизъюнкция. Это основные логические операции, при помощи которых можно записать любое логическое выражение.

Логическое отрицание (инверсия).

В обыденной речи мы часто пользуемся словом "НЕ", или словами "НЕВЕРНО, ЧТО", когда хотим что-то отрицать. Пусть, например, кто-то сказал: "Тоска зеленая." (Обозначим это высказывание А). Если Вы не согласны, Вы скажете:" Тоска НЕ зеленая." Или:" Неверно, что тоска зеленая." (Ваше высказывание обозначим В). Нетрудно заметить, что значения истинности высказываний А и В находятся в определенной связи: если А истинно, то В ложно, и наоборот. Операция, с помощью которой из высказывания А получается высказывание В, называется логическим отрицанием и само высказывание В называется отрицанием высказывания А и обозначается ¬ А.

Таким образом, отрицанием ¬ А некоторого высказывания А называется такое высказывание, которое истинно, когда А ложно, и ложно, когда А истинно. Отрицание высказывания А обозначим ¬А. Определение отрицания может быть записано с помощью так называемой таблицы истинности:

А ¬ А

И Л

Л И

В ней указано, какие значения истинности (Истина, Ложь) принимает отрицание ¬ А в зависимости от значений истинности исходного высказывания А.

Логическое умножение (конъюнкция) от латинского conjunctio - союз, связь.

Если два высказывания соединены союзом "И", то полученное сложное высказывание обычно считается истинным тогда и только тогда, когда истинны оба составляющие его высказывания. Если хотя бы одно из составляющих высказываний ложно, то и полученное из них с помощью союза "И" сложное высказывание также считается ложным. Например, возьмем два высказывания: "У кота есть хвост" (А), "У зайца есть хвост" (В). Сложное высказывание "У кота есть хвост и у зайца есть хвост" истинно, т.к. истинны оба высказывания А и В. Но если взять другие высказывания: "У кота длинный хвост" (С), "У зайца длинный хвост" (D), то сложное высказывание "У кота длинный хвост и у зайца длинный хвост" будет ложным, т.к. ложно высказывание (D). Таким образом, исходя из обычного смысла союза "И", приходим к определению соответствующей логической операции - конъюнкции.

Таким образом, конъюнкцией двух высказываний А и В называется такое высказывание, которое истинно тогда и только тогда, когда истинны оба высказывания А и В.

Конъюнкцию высказываний А и В мы обозначим: A &amp; B. Знак &amp; - амперсент - читается как английское "and" (помните Procter &amp; Gamble или Wash &amp; Go?). Часто встречается обозначение А Л В. Иногда, для краткости, пишут просто АВ.

Определение конъюнкции может быть записано в виде таблицы истинности, в которой для каждого из четырех возможных наборов значений исходных высказываний А и В задается соответствующее значение конъюнкции А &amp; В:

А В А&amp;B

и и и

и л л

л и л

л л л

Определение конъюнкции двух высказываний естественным образом распространяется на любое конечное число составляющих: конъюнкция А1 &amp; A2 &amp; A3 &amp;...&amp; AN истинна тогда и только тогда, когда истинны все высказывания А1, A2, A3, ...AN (а, следовательно, ложна, когда ложно хотя бы одно из этих высказываний).

Логическое сложение (дизъюнкция) от латинского disjunctio - разобщение, различие.

Если два высказывания соединены союзом "ИЛИ", то полученное сложное высказывание обычно считается истинным, когда истинно хотя бы одно из составляющих высказываний. Например, возьмем два высказывания: "Мел черный." (А), "Доска черная." (В). Высказывание "Мел черный или доска черная" будет истинным, т.к. одно из исходных высказываний (В) истинно.

Таким образом, дизъюнкцией двух высказываний называется такое новое высказывание, которое истинно тогда и только тогда, когда истинно хотя бы одно из этих высказываний.

Дизъюнкцию высказываний А и В мы обозначим символом А V В и будем читать: А или В.

Определение дизъюнкции двух высказываний естественным образом распространяется на любое конечное число составляющих: дизъюнкция А1 V А2 V А3 V...V АN истинна тогда и только тогда, когда истинно хотя бы одно из высказываний А1, А2, А3, ..., АN (а следовательно, ложна, когда ложны все эти высказывания).

Логическое следование (импликация) от латинского implico - тесно связываю.

В наших рассуждениях, особенно в математических доказательствах, мы часто пользуемся сложными высказываниями, образованными с помощью слов "если..., то...". Здесь высказывание, расположенное после слова "если", называется основанием или посылкой, а высказывание, расположенное после слова "то", называется следствием или заключением.

Рассмотрим пример: из арифметики. Вам должно быть известно, что утверждение "если каждое слагаемое делится на 3, то и сумма делится на 3" истинно, т.е. из высказывания "каждое слагаемое делится на 3" следует высказывание "сумма делится на 3". Посмотрим, какие наборы значений истинности посылки и заключения возможны, когда истинно все утверждение. Возьмем, например, в качестве слагаемых числа 6 и 9. В этом случае истинны и посылка, и заключение, и все утверждение. Если же взять числа 4 и 5, то посылка будет ложной, а заключение истинным. Для чисел 4 и 7 и посылка и заключение ложны. (Если Вы сомневаетесь в истинности высказывания для последнего случая попробуйте произнести его в сослагательном наклонении: если бы числа 4 и 7 делились бы на 3, то и их сумма делилась бы на 3). Очевидно, что только один случай невозможен: мы не найдем таких двух слагаемых, чтобы каждое из них делилось на 3, а их сумма не делилась на 3, т.е. чтобы посылка была истинной, а заключение ложным. Из истины не может следовать ложь, иначе логика теряет смысл. Высказывание "Если А, то В" с логической точки зрения имеет тот же смысл, что и высказывание "неверно, что А истинно и В ложно". Это означает, что функцию импликации можно заменить комбинацией двух функций (отрицания и конъюнкции). Обычно, когда мы хотим установить ложность высказывания "Если А, то В", мы стараемся показать, что возможен случай, когда Аистинно, а В ложно (доказательство "от противного"). Обозначим импликацию символом =&gt; и запись "А =&gt; В" будем читать: "Из А следует В".

Таким образом, импликацией А =&gt; В называется высказывание, которое ложно тогда и только тогда, когда А истинно и В ложно.

Логическое тождество (эквиваленция).

Интуитивно можно догадаться, что высказывания эквивалентны (равносильными), когда их значения истинности одинаковы. Например, эквивалентны высказывания: "железо тяжелое" и "пух легкий", так же как и высказывания: "железо легкое" и "пух тяжелый". Обозначим эквиваленцию символом &lt;=&gt; и запись "А &lt;=&gt; В" будем читать "А эквивалентно В", или "А равносильно В", или "А, если и только если В".

Таким образом, эквиваленцией двух высказываний А и В называется такое высказывание, которое истинно тогда и только тогда, когда оба эти высказывания А и В истинны или оба ложны.

Отметим, что высказывание типа "А, если и только если В" можно заменить высказыванием "Если А, то В и, если В, то А" (обдумайте это на досуге и обратите внимание на символ &lt;=&gt;). Следовательно, функцию эквиваленции можно заменить комбинацией функций импликации и конъюнкции. Запишем таблицу истинности для эквиваленции:

Приведем примеры записи сложных высказываний с помощью обозначения логических связок:

"Быть иль не быть - вот в чем вопрос." (В. Шекспир) А V ¬ A &lt;=&gt; В

"Если хочешь быть красивым, поступи в гусары." (К. Прутков) А =&gt; В</value>
  </data>
  <data name="textBox3.Text" xml:space="preserve">
    <value>Логическая функция - это функция, в которой переменные принимают только два значения: логическая единица или логический ноль. Истинность или ложность сложных суждений представляет собой функцию истинности или ложности простых. Эту функцию называют булевой функцией суждений f (a, b).

Любая логическая функция может быть задана с помощью таблицы истинности, в левой части которой записывается набор аргументов, а в правой части - соответствующие значения логической функции.

При построении таблицы истинности необходимо учитывать порядок выполнения логических операций. Операции в логическом выражении выполняются слева направо с учетом скобок в следующем порядке:

1. инверсия;

2. конъюнкция;

3. дизъюнкция;

4. импликация и эквивалентность.

Для изменения указанного порядка выполнения логических операций используются круглые скобки.

Предлагается следующий алгоритм построения таблицы истинности.

1. Определить количество наборов входных переменных - всевозможных сочетаний значений переменных, входящих в выражения, по формуле: Q=2n , где n - количество входных переменных. Оно определяет количество строк таблицы.

2. Внести в таблицу все наборы входных переменных.

3. Определить количество логических операций и последовательность их выполнения.

4. Заполнить столбцы результатами выполнения логических операций в обозначенной последовательности.


Чтобы не повторить или не пропустить ни одного возможного сочетания значений входных переменных, следует пользоваться одним из предлагаемых ниже способов заполнения таблицы.

Способ 1. Каждый набор значений исходных переменных есть код числа в двоичной системе счисления, причем количество разрядов числа равно количеству входных переменных. Первый набор - число 0. Прибавляя к текущему числу каждый раз по 1, получаем очередной набор. Последний набор - максимальное значение двоичного числа для данной длины кода.

Например, для функции от трех переменных последовательность наборов состоит из чисел:

000

001

010

011

100

101

110

111

Способ 2. Для функции от трех переменных последовательность данных можно получить следующим путем:

а) разделить колонку значений первой переменной пополам и заполнить верхнюю половину нулями, нижнюю половину единицами;

б) в следующей колонке для второй переменной половинку снова разделить пополам и заполнить группами нулей и единиц; аналогично заполнить вторую половинку;

в) так делать до тех пор, пока группы нулей и единиц не будут состоять из одного символа.

Способ 3. Воспользоваться известной таблицей истинности для двух аргументов. Добавляя третий аргумент, сначала записать первые 4 строки таблицы, сочетая их со значением третьего аргумента, равным 0, а затем еще раз записать эти же 4 строки, но теперь уже со значением третьего аргумента, равным 1. В результате в таблице для трех аргументов окажется 8 строк:

000

010

100

110

001

011

101

111

Например, построим таблицу истинности для логической функции:


Количество входных переменных в заданном выражении равно трем (A,B,C). Значит, количество входных наборов Q=23=8.

Столбцы таблицы истинности соответствуют значениям исходных выражений A,B,C, промежуточных результатов и (B V C), а также искомого окончательного значения сложного арифметического выражения :

A B C B V C

0 0 0 1 0 0

0 0 1 1 1 1

0 1 0 1 1 1

0 1 1 1 1 1

1 0 0 0 0 0

1 0 1 0 1 0

1 1 0 0 1 0

1 1 1 0 1 0</value>
  </data>
  <data name="textBox4.Text" xml:space="preserve">
    <value>Для операций конъюнкции, дизъюнкции и инверсии определены законы булевой алгебры, позволяющие производить тождественные (равносильные) преобразования логических выражений.

Законы логики

1. ¬¬ А &lt;=&gt; A закон двойного отрицания;

2. A&amp;B &lt;=&gt; B&amp;A коммутативность конъюнкции;

3. AVB &lt;=&gt; BVA коммутативность дизъюнкции;

4. A&amp;(B&amp;C) &lt;=&gt; (A&amp;B)&amp;C ассоциативность конъюнкции;

5. AV(BVC) &lt;=&gt; (AVB)VC ассоциативность дизъюнкции;

6. A&amp;(BVC) &lt;=&gt; (A&amp;B)V(A&amp;C) дистрибутивность конъюнкции относительно дизъюнкции;

7. AV(B&amp;C) &lt;=&gt; (AVB)&amp;(AVC) дистрибутивность дизъюнкции относительно конъюнкции;

8. A&amp;A &lt;=&gt; A

9. AVA &lt;=&gt; A

10. AV¬A &lt;=&gt; И закон исключенного третьего;

11. A&amp;¬A &lt;=&gt; Л закон непротиворечия;

12. A&amp;И &lt;=&gt; A

13. AVИ &lt;=&gt; И

14. A&amp;Л &lt;=&gt; Л

15. AVЛ &lt;=&gt; A

16. ¬(A&amp;B) &lt;=&gt; ¬ A V ¬ B законы де Моргана;

17. ¬(AVB) &lt;=&gt; ¬ A &amp; ¬ B

18. A =&gt; B &lt;=&gt; ¬ A V B замена импликации.

Основываясь на законах, можно выполнять упрощение сложных логических выражений. Такой процесс замены сложной логической функции более простой, но равносильной ей, называется минимизацией функции.

Пример 1. Упростить выражения так, чтобы в полученных формулах не содержалось отрицания сложных высказываний.

Решение

Пример 2. Минимизировать функцию


Решение

При упрощении выражения использовались формулы поглощения и склеивания.

Пример 3. Найти отрицание следующего высказывания: "Если урок будет интересным, то никто из учеников (Миша, Вика, Света) не будет смотреть в окно".

Решение

Обозначим высказывания:

Y - "Урок интересный";

M - "Миша смотрит в окно";

B - "Вика смотрит в окно";

C - "Света смотрит в окно".

При упрощении выражения использовались формула замены операций и закон де Моргана.

Пример 4. Определить участника преступления, исходя из двух посылок: логический компьютер таблица

1) "Если Иванов не участвовал или Петров участвовал, то Сидоров участвовал";

2) "Если Иванов не участвовал, то Сидоров не участвовал".

Решение

Составим выражения:

I - "Иванов участвовал в преступлении";

P - "Петров участвовал в преступлении";

S - "Сидоров участвовал в преступлении".

Запишем посылки в виде формул:

Тогда

Проверим результат, используя таблицу истинности:


Ответ: Иванов участвовал в преступлении.

Построение логической функции по ее таблице истинности

Мы научились составлять таблицу истинности для логической функции. Попробуем решить обратную задачу.

Рассмотрим строки, где значение истинности функции Z истинно (Z=1). Функцию для этой таблицы истинности можно составить следующим образом: Z(X,Y) = (¬ X&amp; ¬Y)V(X&amp; ¬Y).

Каждой строке, где функция истинна (равна 1), соответствует скобка, представляющая собой конъюнкцию аргументов, причем если значение аргумента О, то мы берем его с отрицанием. Все скобки соединены между собой операцией дизъюнкции. Полученную формулу можно упростить, применив законы логики:

Z(X,Y) &lt;=&gt; ((¬X&amp; ¬Y) VX)&amp;(( ¬X&amp;Y)V ¬Y) &lt;=&gt; (XV( ¬X&amp; ¬Y)) &amp;( ¬YV(¬X&amp;¬Y)) &lt;=&gt; ((XV¬X)&amp;(XV ¬Y))&amp;(( Y¬V ¬X)&amp;( ¬YV ¬Y)) &lt;=&gt; (1&amp;(XV ¬Y))&amp;(( ¬YV ¬X)&amp; ¬Y)&lt;=&gt; (XV ¬Y)&amp;(( ¬YV ¬X)&amp; ¬Y).

Проверьте полученную формулу: составьте таблицу истинности для функции Z(X,Y).

Запишите правила конструирования логической функции по ее таблице истинности:

1. Выделить в таблице истинности те строки, в которых значение функции равно 1.

2. Выписать искомую формулу в виде дизъюнкции нескольких логических элементов. Число этих элементов равно числу выделенных строк.

3. Каждый логический элемент в этой дизъюнкции записать в виде конъюнкции аргументов функции.

4. Если значение какого-либо аргумента функции в соответствующей строке таблице равно 0, то этот аргумент мы берем с отрицанием.</value>
  </data>
  <data name="textBox5.Text" xml:space="preserve">
    <value>Знания из области математической логики можно использовать для конструирования электронных устройств. Нам известно, что 0 и 1 в логике не просто цифры, а обозначение состояний какого-то предмета нашего мира, условно называемых "ложь" и "истина". Таким предметом, имеющим два фиксированных состояния, может быть электрический ток. Устройства, фиксирующие два устойчивых состояния, называются бистабильными (например, выключатель, реле). Если вы помните, первые вычислительные машины были релейными. Позднее были созданы новые устройства управления электричеством - электронные схемы, состоящие из набора полупроводниковых элементов. Такие электронные схемы, которые преобразовывают сигналы только двух фиксированных напряжений электрического тока (бистабильные), стали называть логическими элементами.

На элементарном уровне конъюнкцию можно представить себе в виде последовательно соединенных выключателей, а дизъюнкцию - в виде параллельно соединенных выключателей:


Логические элементы имеют один или несколько входов и один выход, через которые проходят электрические сигналы, обозначаемые условно 0, если "отсутствует" электрический сигнал, и 1, если "имеется" электрический сигнал. Простейшим логическим элементом является инвертор, выполняющий функцию отрицания. Если на вход поступает сигнал, соответствующий 1, то на выходе будет 0. И наоборот. У этого элемента один вход и один выход. На функциональных схемах он обозначается:


Логический элемент, выполняющий логическое сложение, называется дизъюнктор. Он имеет, как минимум, два входа. На функциональных схемах он обозначается:


Логический элемент, выполняющий логическое умножение, называется конъюнктор. Он имеет, как минимум, два входа. На функциональных схемах он обозначается:


Специальных логических элементов для импликации и эквивалентности нет, т.к. А =&gt; В можно заменить на ¬А V В ; А &lt;=&gt; В можно заменить на (A &amp; B)V(¬A &amp; ¬B).

Другие логические элементы построены из этих трех простейших и выполняют более сложные логические преобразования информации. Сигнал, выработанный одним логическим элементом, можно подавать на вход другого элемента, это дает возможность образовывать цепочки из отдельных логических элементов. Например:

логический компьютер таблица


Эта схема соответствует сложной логической функции F(A,B)= ¬ (А V В).

Попробуйте проследить изменения электрического сигнала в этой схеме. Например, какое значение электрического сигнала (0 или 1) будет на выходе, если на входе: А=1 и В=0.

Такие цепи из логических элементов называются логическими устройствами. Логические устройства же, соединяясь, в свою очередь образуют функциональные схемы (их еще называют структурными или логическими схемами). По заданной функциональной схеме можно определить логическую формулу, по которой эта схема работает, и наоборот.

Пример 1. Логическая схема для функции будет выглядеть следующим образом:


Правила составления электронных логических схем по заданным таблицам истинности остаются такими же, как для контактных схем.

Пример 2. Составить логическую схему для тайного голосования трех персон A, B, C, условия которого определяются следующей таблицей истинности:

A 0 0 0 0 1 1 1 1

B 0 0 1 1 0 0 1 1

C 0 1 0 1 0 1 0 1

F 0 0 0 1 0 1 1 1

Решение

По таблице построим СДНФ логической функции и упростим ее:


Правильность полученной формулы можно проверить, составив для нее таблицу истинности:


Значение полученной функции совпадает с исходным, что можно заметить, сравнивая таблицы.

Логическая схема полученной функции имеет вид:


Рассмотрим еще два логических элемента, которые играют роль базовых при создании более сложных элементов и схем.


Логический элемент И-НЕ состоит из конъюнктора и инвертора:

Выходная функция выражается формулой .

Логический элемент ИЛИ-НЕ состоит из дизъюнктора и инвертора:


Выходная функция выражается формулой .</value>
  </data>
  <data name="textBox6.Text" xml:space="preserve">
    <value>Обработка любой информации на компьютере сводится к выполнению процессором различных арифметических и логических операций. Для этого в состав процессора входит так называемое арифметико-логическое устройство (АЛУ). Оно состоит из ряда устройств, построенных на рассмотренных выше логических элементах. Важнейшими из таких устройств являются триггеры, полусумматоры, сумматоры, шифраторы, дешифраторы, счетчики, регистры.

Этапы конструирования логического устройства.

Конструирование логического устройства состоит из следующих этапов:

1. Построение таблицы истинности по заданным условиям работы проектируемого узла (т.е. по соответствию его входных и выходных сигналов).

2. Конструирование логической функции данного узла по таблице истинности, ее преобразование (упрощение), если это возможно и необходимо.

3. Составление функциональной схемы проектируемого узла по формуле логической функции.

После этого остается только реализовать полученную схему.

Попробуем, действуя по этому плану, сконструировать устройство для сложения двух двоичных чисел (одноразрядный полусумматор).

Пусть нам необходимо сложить двоичные числа X и Y. Через P и Z обозначим первую и вторую цифру суммы: X + Y = PZ. Вспомните таблицу сложения двоичных чисел.

1. Таблица истинности, определяющая результат сложения, имеет вид:


2. Сконструируем функции P(X,Y) и Z(X,Y) по этой таблице:

P(X,Y)=X &amp; Y; Z(X,Y)=(¬ X&amp;Y)V (X&amp; ¬ Y).

Преобразуем вторую формулу, пользуясь законами логики.

(¬ X&amp;Y)V(X&amp; ¬Y) &lt;=&gt; ((¬ X&amp;Y)VX)&amp; ((¬ X&amp;Y)V ¬Y) &lt;=&gt; (XV(¬ X&amp;Y))&amp;(¬ YV (Y&amp; ¬X)) &lt;=&gt;((XV ¬X)&amp;(XVY))&amp; ((¬ YVY)&amp;(¬ Y V ¬X)) &lt;=&gt; (1&amp;(XVY))&amp;((И&amp; ¬(X&amp;Y)) &lt;=&gt; (XVY)&amp; ¬(X&amp;Y).

3. Теперь можно построить функциональную схему одноразрядного полусумматора:


Одноразрядный двоичный сумматор на три входа и два выхода называется полным одноразрядным сумматором.

Сумматор - это электронная логическая схема, выполняющая суммирование двоичных чисел поразрядным сложением. Сумматор является центральным узлом арифметико-логического устройства процессора. Находит он применение и в других устройствах компьютера. Сумматор выполняет сложение многозначных двоичных чисел. Он представляет собой последовательное соединение одноразрядных двоичных сумматоров, каждый из которых осуществляет сложение в одном разряде. Если при этом возникает переполнение разряда, то перенос суммируется с содержимым старшего соседнего разряда.

Общая схема сумматора:


Триггер - электронная схема, применяемая для хранения значения одноразрядного двоичного кода.

Воздействуя на входы триггера, его переводят в одно из двух возможных состояний (0 или 1). С поступлением сигналов на входы триггера в зависимости от его состояния либо происходит переключение, либо исходное состояние сохраняется. При отсутствии входных сигналов триггер сохраняет свое состояние сколь угодно долго.

Термин триггер происходит от английского слова trigger - защёлка, спусковой крючок. Для обозначения этой схемы в английском языке чаще употребляется термин flip-flop, что в переводе означает "хлопанье". Это звукоподражательное название электронной схемы указывает на её способность почти мгновенно переходить ("перебрасываться") из одного электрического состояния в другое.

Существуют разные варианты исполнения триггеров в зависимости от элементной базы (И-НЕ, ИЛИ-НЕ) и функциональных связей между сигналами на входах и выходах (RS, JK, T, D и другие).

Самый распространённый тип триггера - это RS-триггер (S и R соответственно от английских set - установка, и reset - сброс). Условное обозначение RS-триггера:


Триггер имеет два симметричных входа S и R, которые используются для установки в единичное состояние и сброса, - в нулевое. Еще у него есть два симметричных выхода Q и , причем выходной сигнал Q является логическим отрицанием сигнала .

За единичное состояние триггера условились принимать такое, при котором Q=1.

На каждый из входов S и R могут подаваться входные сигналы в виде кратковременных импульсов . Наличие импульса на входе считается единицей, а его отсутствие - нулем.

Ниже показана схема реализации триггера с помощью элементов ИЛИ-НЕ и соответствующая таблица истинности.


Два одинаковых двухвходовых логических элемента ИЛИ-НЕ соединены симметричным образом. Сигнал, поданный на один из входов каждого элемента, снимается с выхода другого. Наличие такого соединения и дает триггеру возможность сохранять свое состояние после прекращения действия сигналов (никакой другой логический элемент не в состоянии поддерживать сигнал на выходе после прекращения действия входного напряжения).

Проанализируем возможные комбинации значений входов R и S триггера, используя его схему и таблицу истинности схемы.

1. Пусть поданы сигналы S=1, R=0. Независимо от состояния другого входа на выходе верхнего элемента появится 0. Этот нулевой сигнал подается на вход нижнего элемента, где уже есть R=0. Выход нижнего элемента станет равным 1. Эта единица возвращается на вход первого элемента. Теперь состояние другого входа (S) этого элемента роли не играет: если даже убрать входной сигнал S, состояние триггера останется без изменения. Поскольку Q=1, триггер перешел в единичное состояние, устойчивое, пока не придут новые внешние сигналы.

2. При S=0 и R=1 вследствие симметричности схемы все происходит аналогично, но теперь на выходе Q будет 0. То есть при подаче сигнала на вход R триггер сбрасывается в устойчивое нулевое состояние.

3. При окончании действия обоих сигналов (R=0 и S=0) триггер сохраняет на выходе Q тот сигнал, который был установлен входным импульсом S или R.

4. Подача импульсов одновременно на входы R и S может привести к неоднозначному результату, поэтому эта комбинация входных сигналов (R=1 и S=1) запрещена.

Один триггер хранит один бит информации. Для хранения одного байта информации необходимо 8 триггеров. Современные микросхемы памяти содержат миллионы триггеров.

По технологии изготовления память делится на статическую и динамическую. На триггерах основана статическая память, а динамическая устроена по принципу конденсатора: заряженный конденсатор соответствует единице, а незаряженный - нулю.

Динамическая память проще по устройству, имеет больший объем и дешевле. В силу этих преимуществ в настоящее время основной объем оперативного запоминающего устройства компьютера является динамическим.

Однако статическая память имеет более высокое быстродействие. Кэш-память имеет статическую природу, что позволяет согласовать высокое быстродействие процессора и низкую скорость работы динамической памяти.

Конденсаторы динамической памяти постепенно разряжаются через внешние цепи, и потому требуют периодичекой подзарядки, чтобы не потерять информацию. Этот процесс называется регенерацией памяти, его наличие усложняет подключение микросхем динамической памяти. Микросхема статической памяти сильнее нагревается при работе, так как использует активные элементы - транзисторы.

Некоторое количество триггеров, объединенных вместе общей системой управления, называется регистром. Регистры содержатся в различных вычислительных узлах компьютера - процессоре, периферийных устройствах и т.д. Регистр - это устройство, предназначенное для хранения многоразрядного двоичного числового кода, которым можно представлять и адрес, и команду, и данные.

Упрощенно регистр можно представить как совокупность ячеек, в каждой из которых может быть записано одно из двух значений: 0 или 1, то есть один разряд двоичного числа.

Существует несколько типов регистров, отличающихся видом выполняемых операций. Некоторые важные регистры имеют свои названия, например:

сдвиговый регистр - предназначен для выполнения операции сдвига;

счетчики - схемы, способные считать поступающие на вход импульсы. К ним относятся Т-триггеры (название от англ. tumble - опрокидываться). Этот триггер имеет один счетный вход и два выхода. Под действием сигналов триггер меняет свое состояние с нулевого на единичное и наоборот. Число перебрасываний соответствует числу поступивших сигналов;

счетчик команд - регистр устройства управления процессора (УУ), содержимое которого соответствует адресу очередной выполняемой команды; служит для автоматической выборки программы из последовательных ячеек памяти;

регистр команд - регистр УУ для хранения кода команды на период времени, необходимый для ее выполнения. Часть его разрядов используется для хранения кода операции, остальные - для хранения кодов адресов операндов.

Техническая сторона логики компьютера основана на технологии транзистора, что позволяет получать одну из двух возможных единиц информации (0 и 1), оперируя с передачей или отсутствием передачи тока. На следующем уровне вступает система носителей (переносчиков) информации - это нули и единицы (0 и 1), которые отражают в себе реальную информацию путем применения, как систем счисления, так и системы команд микропроцессора.

Логика микропроцессора (МП). МП имеет (может иметь) встроенную логику, основанную на формальной логике человека. Таким образом, имеется возможность обрабатывать информацию. Так, например, получая группу информационных потоков (два потока), МП может, используя формальную логику, выдать один искомый поток.

Логика операционной системы. Хотя технически возможна работа на компьютере без использования операционной системы (ОС), так как в ПЗУ находятся (могут находиться) для этого специальные программы, целесообразность использования ОС никем не подвергается сомнению. ОС представляет собой программу (группу программ), которая обеспечивает полный системный интерфейс компьютера.

И, наконец, логика прикладных программ. В данном случае все зависит от фантазии и профессионализма программиста или пользователя.

Проиллюстрируем уровни логики ЭВМ. Получив на два регистра по единице и команду реализовать функцию AND, МП, применив заложенную в нем формальную логику, выдает на результирующий регистр единицу. Эта единица некоторым образом интерпретируется операционной системой, например, как истинность выполненной операции, а затем передается (может передаваться) прикладной программе, которая в свою очередь так же интерпретирует полученную информацию и производит в соответствии с этим некоторые действия.</value>
  </data>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>